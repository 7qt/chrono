{"version":3,"sources":["webpack://chrono/webpack/universalModuleDefinition","webpack://chrono/webpack/bootstrap","webpack://chrono/./node_modules/dayjs/dayjs.min.js","webpack://chrono/./src/utils/pattern.ts","webpack://chrono/./src/locales/en/constants.ts","webpack://chrono/./src/results.ts","webpack://chrono/./src/locales/en/parsers/ENTimeUnitDeadlineFormatParser.ts","webpack://chrono/./src/calculation/yearCalculation.ts","webpack://chrono/./src/locales/en/parsers/ENMonthNameLittleEndianParser.ts","webpack://chrono/./src/locales/en/parsers/ENMonthNameMiddleEndianParser.ts","webpack://chrono/./src/locales/en/parsers/ENMonthNameParser.ts","webpack://chrono/./src/locales/en/parsers/ENSlashDateFormatParser.ts","webpack://chrono/./src/locales/en/parsers/ENSlashDateFormatStartWithYearParser.ts","webpack://chrono/./src/locales/en/parsers/ENSlashMonthFormatParser.ts","webpack://chrono/./src/locales/en/parsers/ENTimeExpressionParser.ts","webpack://chrono/./src/locales/en/parsers/ENTimeUnitAgoFormatParser.ts","webpack://chrono/./src/locales/en/parsers/ENTimeUnitLaterFormatParser.ts","webpack://chrono/./src/common/abstractRefiners.ts","webpack://chrono/./src/common/refiners/AbstractMergeDateRangeRefiner.ts","webpack://chrono/./src/locales/en/refiners/ENMergeDateRangeRefiner.ts","webpack://chrono/./src/calculation/mergingCalculation.ts","webpack://chrono/./src/common/refiners/AbstractMergeDateTimeRefiner.ts","webpack://chrono/./src/locales/en/refiners/ENMergeDateTimeRefiner.ts","webpack://chrono/./src/common/refiners/ExtractTimezoneAbbrRefiner.ts","webpack://chrono/./src/common/refiners/ExtractTimezoneOffsetRefiner.ts","webpack://chrono/./src/common/refiners/OverlapRemovalRefiner.ts","webpack://chrono/./src/common/refiners/ForwardDateRefiner.ts","webpack://chrono/./src/common/refiners/UnlikelyFormatFilter.ts","webpack://chrono/./src/common/parsers/ISOFormatParser.ts","webpack://chrono/./src/utils/ParserWithWordEndingDetection.ts","webpack://chrono/./src/configurations.ts","webpack://chrono/./src/locales/en/parsers/ENCasualDateParser.ts","webpack://chrono/./src/locales/en/parsers/ENCasualTimeParser.ts","webpack://chrono/./src/locales/en/parsers/ENWeekdayParser.ts","webpack://chrono/./src/locales/en/parsers/ENRelativeDateFormatParser.ts","webpack://chrono/./src/chrono.ts","webpack://chrono/./src/locales/en/index.ts","webpack://chrono/./src/locales/ja/constants.ts","webpack://chrono/./src/locales/ja/parsers/JPStandardParser.ts","webpack://chrono/./src/locales/ja/refiners/JPMergeDateRangeRefiner.ts","webpack://chrono/./src/locales/ja/parsers/JPCasualDateParser.ts","webpack://chrono/./src/locales/ja/index.ts","webpack://chrono/./src/index.ts"],"names":["patternWithWordBreak","regExp","RegExp","source","extractTerms","dictionary","keys","Array","Map","from","Object","matchAnyPattern","joinedTerms","sort","a","b","length","join","replace","WEEKDAY_DICTIONARY","MONTH_DICTIONARY","INTEGER_WORD_DICTIONARY","ORDINAL_WORD_DICTIONARY","TIME_UNIT_DICTIONARY","NUMBER_PATTERN","parseNumberPattern","match","num","toLowerCase","undefined","parseFloat","ORDINAL_NUMBER_PATTERN","parseOrdinalNumberPattern","parseInt","YEAR_PATTERN","parseYear","test","yearNumber","SINGLE_TIME_UNIT_PATTERN","SINGLE_TIME_UNIT_REGEX","SINGLE_TIME_UNIT_PATTERN_NO_CAPTURE","TIME_UNITS_PATTERN","parseTimeUnits","timeunitText","fragments","remainingText","exec","collectDateTimeFragment","substring","unit","ParsingComponents","refDate","knownComponents","knownValues","impliedValues","key","refDayJs","dayjs","imply","date","month","year","component","toDate","value","Date","isCertain","dateMoment","adjustTimezoneOffset","get","utcOffset","add","result","hour","minute","second","millisecond","currentTimezoneOffset","targetTimezoneOffset","JSON","stringify","components","assign","day","ParsingResult","index","text","start","end","clone","PATTERN","STRICT_PATTERN","ENTimeUnitDeadlineFormatParser","strictMode","context","timeUnits","createRelativeFromRefDate","findYearClosestToRef","refMoment","nextYear","lastYear","Math","abs","diff","WEEKDAY_GROUP","DATE_GROUP","DATE_TO_GROUP","MONTH_NAME_GROUP","YEAR_GROUP","ENMonthNameLittleEndianParser","createParsingResult","weekday","endDate","ENMonthNameMiddleEndianParser","createParsingComponents","ENMonthNameParser","monthName","DAYS_OFFSET","OPENING_GROUP","ENDING_GROUP","FIRST_NUMBERS_GROUP","SECOND_NUMBERS_GROUP","ENSlashDateFormatParser","littleEndian","groupNumberMonth","groupNumberDay","substr","indexOf","YEAR_NUMBER_GROUP","MONTH_NUMBER_GROUP","DATE_NUMBER_GROUP","ENSlashDateFormatStartWithYearParser","MONTH_GROUP","ENSlashMonthFormatParser","FIRST_REG_PATTERN","SECOND_REG_PATTERN","HOUR_GROUP","MINUTE_GROUP","SECOND_GROUP","MILLI_SECOND_GROUP","AM_PM_HOUR_GROUP","ENTimeExpressionParser","extractStartTimeComponent","newResult","extractEndTimeComponent","meridiem","Meridiem","PM","AM","floor","ampm","startAtPM","getTime","ENTimeUnitAgoFormatParser","GROUP_NUM_SUFFIX","GROUP_NUM_TIMEUNITS","ENTimeUnitLaterFormatParser","suffix","trim","Filter","results","filter","r","isValid","MergingRefiner","mergedResults","curResult","nextResult","i","textBetween","shouldMergeResults","push","left","right","mergedResult","mergeResults","debug","console","log","constructor","name","AbstractMergeDateRangeRefiner","currentResult","patternBetween","fromResult","toResult","isOnlyWeekdayComponent","getCertainComponents","forEach","fromMoment","toMoment","isBefore","isAfter","min","ENMergeDateRangeRefiner","mergeDateTimeResult","dateResult","timeResult","beginDate","beginTime","mergeDateTimeComponent","endTime","endDateTime","dateComponent","timeComponent","dateTimeComponent","ENMergeDateTimeRefiner","isOnlyDate","isOnlyTime","AbstractMergeDateTimeRefiner","TIMEZONE_NAME_PATTERN","DEFAULT_TIMEZONE_ABBR_MAP","ExtractTimezoneAbbrRefiner","timezoneOverrides","timezone","timezones","option","timezoneAbbr","toUpperCase","timezoneOffset","TIMEZONE_OFFSET_PATTERN","TIMEZONE_OFFSET_SIGN_GROUP","TIMEZONE_OFFSET_HOUR_OFFSET_GROUP","TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP","ExtractTimezoneOffsetRefiner","hourOffset","minuteOffset","OverlapRemovalRefiner","filteredResults","prevResult","ForwardDateRefiner","forwardDate","isOnlyDayMonthComponent","UnlikelyFormatFilter","isValidDate","HOUR_NUMBER_GROUP","MINUTE_NUMBER_GROUP","SECOND_NUMBER_GROUP","MILLISECOND_NUMBER_GROUP","TZD_HOUR_OFFSET_GROUP","TZD_MINUTE_OFFSET_GROUP","ISOFormatParser","offset","createParserWithWordBoundaryDetection","parser","ParserWithWordEndingDetection","original","originalPattern","pattern","flags","header","extract","includeCommonConfiguration","configuration","parsers","unshift","refiners","ENCasualDateParser","targetDate","lowerText","ENCasualTimeParser","PREFIX_GROUP","POSTFIX_GROUP","ENWeekdayParser","dayOfWeek","prefix","postfix","modifier","extractWeekday","refOffset","MODIFIER_WORD_GROUP","MULTIPLIER_WORD_GROUP","RELATIVE_WORD_GROUP","ENRelativeDateFormatParser","extractThisReference","parsedNum","unitWord","extractDateReference","extractTimeReference","timeUnitWord","dateUnitWord","relativeWord","Chrono","createCasualConfiguration","opt","parse","ParsingContext","parsedResults","executeParser","concat","refiner","refine","originalText","parsedResult","textOrEndIndex","startComponents","endComponents","block","Function","handler","casual","strict","createConfiguration","GB","ref","parseDate","withWordBoundary","toHankaku","String","alphaNum","token","fromCharCode","charCodeAt","SPECIAL_YEAR_GROUP","TYPICAL_YEAR_GROUP","ERA_GROUP","DAY_GROUP","JPStandardParser","moment","yearNumText","JPMergeDateRangeRefiner","JPCasualDateParser","en"],"mappings":"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","file":"chrono.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chrono\"] = factory();\n\telse\n\t\troot[\"chrono\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},d={s:c,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),r=t.clone().add(n,u),i=e-r<0,s=t.clone().add(n+(i?-1:1),u);return Number(-(n+(e-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,D:\"date\",h:r,m:n,s:e,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,e,n){var r;if(!t)return l;if(\"string\"==typeof t)m[t]&&(r=t),e&&(m[t]=e,r=t);else{var i=t.name;m[i]=t,r=i}return!n&&r&&(l=r),r||!n&&l},g=function(t,e){if(y(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new v(n)},D=d;D.l=M,D.i=y,D.w=function(t,e){return g(t,{locale:e.$L,utc:e.$u,$offset:e.$offset})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(D.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r)return n?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(e)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,e){var n=g(t);return this.startOf(e)<=n&&n<=this.endOf(e)},d.isAfter=function(t,e){return g(t)<this.startOf(e)},d.isBefore=function(t,e){return this.endOf(e)<g(t)},d.$g=function(t,e,n){return D.u(t)?this[e]:this.set(n,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",n)},d.second=function(t){return this.$g(t,\"$s\",e)},d.millisecond=function(e){return this.$g(e,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,e){var n=D.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return f?n:n.endOf(i)},$=function(t,e){return D.w(h.toDate()[t].apply(h.toDate(\"s\"),(f?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case n:return $(M+\"Seconds\",2);case e:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[n]=c+\"Minutes\",h[e]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,e){return this.clone().$set(t,e)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(e){var n=g(f);return D.w(n.date(n.date()+Math.round(e*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[n]=6e4,h[r]=36e5,h[e]=1e3,h)[c]||1,l=this.$d.getTime()+t*$;return D.w(l,this)},d.subtract=function(t,e){return this.add(-1*t,e)},d.format=function(t){var e=this;if(!this.isValid())return\"Invalid Date\";var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:c(h,o),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return n.replace(f,function(t,e){return e||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[n]=m/6e4,c[e]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=M(t,e,!0);return r&&(n.$L=r),n},d.clone=function(){return D.w(this.$d,this)},d.toDate=function(){return new Date(this.valueOf())},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,e){return t(e,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","\n\ntype DictionaryLike = string[] | {[word: string] : unknown} | Map<string, unknown>\n\nexport function patternWithWordBreak(regExp: RegExp) : RegExp {\n    return RegExp('' + regExp.source)\n}\n\n\nexport function extractTerms(dictionary: DictionaryLike): string[] {\n    let keys: string[];\n    if (dictionary instanceof Array) {\n        keys = [...dictionary];\n    } else if (dictionary instanceof Map) {\n        keys = Array.from((dictionary as Map<string, unknown>).keys());\n    } else {\n        keys = Object.keys(dictionary);\n    }\n\n    return keys;\n}\n\n\nexport function matchAnyPattern(dictionary: DictionaryLike) : string {\n    // TODO: More efficient regex pattern by considering duplicated prefix\n\n    const joinedTerms = extractTerms(dictionary)\n        .sort((a, b) => b.length - a.length)\n        .join('|')\n        .replace(/\\./g, '\\\\.')\n\n    return `(?:${joinedTerms})`;\n}","import {OpUnitType} from \"dayjs\";\nimport {matchAnyPattern} from \"../../utils/pattern\";\n\nexport const WEEKDAY_DICTIONARY: {[word: string]: number} = {\n    'sunday': 0,\n    'sun': 0,\n    'sun.': 0,\n    'monday': 1,\n    'mon': 1,\n    'mon.': 1,\n    'tuesday': 2,\n    'tue':2,\n    'tue.':2,\n    'wednesday': 3,\n    'wed': 3,\n    'wed.': 3,\n    'thursday': 4,\n    'thurs': 4,\n    'thurs.': 4,\n    'thur': 4,\n    'thur.': 4,\n    'thu': 4,\n    'thu.': 4,\n    'friday': 5,\n    'fri': 5,\n    'fri.': 5,\n    'saturday': 6,\n    'sat': 6,\n    'sat.': 6\n};\n\nexport const MONTH_DICTIONARY: {[word: string]: number}  = {\n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexport const INTEGER_WORD_DICTIONARY: {[word: string]: number} = {\n    'one' : 1,\n    'two' : 2,\n    'three' : 3,\n    'four' : 4,\n    'five' : 5,\n    'six' : 6,\n    'seven' : 7,\n    'eight' : 8,\n    'nine' : 9,\n    'ten' : 10,\n    'eleven' : 11,\n    'twelve' : 12\n};\n\nexport const ORDINAL_WORD_DICTIONARY: {[word: string]: number} = {\n    'first' : 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty-first': 21,\n    'twenty second': 22,\n    'twenty-second': 22,\n    'twenty third': 23,\n    'twenty-third': 23,\n    'twenty fourth': 24,\n    'twenty-fourth': 24,\n    'twenty fifth': 25,\n    'twenty-fifth': 25,\n    'twenty sixth': 26,\n    'twenty-sixth': 26,\n    'twenty seventh': 27,\n    'twenty-seventh': 27,\n    'twenty eighth': 28,\n    'twenty-eighth': 28,\n    'twenty ninth': 29,\n    'twenty-ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31,\n    'thirty-first': 31\n};\n\nexport const TIME_UNIT_DICTIONARY : {[word: string]: OpUnitType} = {\n    'sec': 'second',\n    'second' : 'second',\n    'seconds' : 'second',\n    'min' : 'minute',\n    'mins' : 'minute',\n    'minute' : 'minute',\n    'minutes' : 'minute',\n    'h' : 'hour',\n    'hr' : 'hour',\n    'hrs' : 'hour',\n    'hour' : 'hour',\n    'hours' : 'hour',\n    'day' : 'd',\n    'days' : 'd',\n    'week' : 'week',\n    'weeks': 'week',\n    'month' : 'month',\n    'months' : 'month',\n    'yr' : 'year',\n    'year' : 'year',\n    'years' : 'year',\n};\n\n//-----------------------------\n\nexport const NUMBER_PATTERN = `(?:${matchAnyPattern(INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\\\.[0-9]+|half(?:\\\\s*an?)?|an?(?:\\\\s*few)?|few)`;\n\nexport function parseNumberPattern(match: string) : number {\n    const num = match.toLowerCase();\n    if (INTEGER_WORD_DICTIONARY[num] !== undefined) {\n        return INTEGER_WORD_DICTIONARY[num];\n    } else if (num === 'a' || num === 'an') {\n        return 1;\n    } else if (num.match(/few/)) {\n        return 3;\n    } else if (num.match(/half/)) {\n        return 0.5;\n    }\n\n    return parseFloat(num);\n}\n\n//-----------------------------\n\nexport const ORDINAL_NUMBER_PATTERN = `(?:${matchAnyPattern(ORDINAL_WORD_DICTIONARY)}|[0-9]{1,2}(?:st|nd|rd|th)?)`;\nexport function parseOrdinalNumberPattern(match: string) : number {\n    let num = match.toLowerCase();\n    if (ORDINAL_WORD_DICTIONARY[num] !== undefined) {\n        return ORDINAL_WORD_DICTIONARY[num];\n    }\n\n    num = num.replace(/(?:st|nd|rd|th)$/i, '')\n    return parseInt(num);\n}\n\n\n//-----------------------------\n\nexport const YEAR_PATTERN = `(?:[1-9][0-9]{0,3}\\\\s*(?:BE|AD|BC)|[1-2][0-9]{3}|[5-9][0-9])`;\nexport function parseYear(match: string) : number {\n    if (/BE/i.test(match)) {\n        // Buddhist Era\n        match = match.replace(/BE/i, '');\n        return parseInt(match) - 543;\n    }\n\n    if (/BC/i.test(match)){\n        // Before Christ\n        match = match.replace(/BC/i, '');\n        return -parseInt(match);\n    }\n\n    if (/AD/i.test(match)){\n        match = match.replace(/AD/i, '');\n        return parseInt(match);\n    }\n\n    let yearNumber = parseInt(match);\n    if (yearNumber < 100){\n        if (yearNumber > 50) {\n            yearNumber = yearNumber + 1900;\n        } else {\n            yearNumber = yearNumber + 2000;\n        }\n    }\n\n    return yearNumber;\n}\n\n//-----------------------------\n\nconst SINGLE_TIME_UNIT_PATTERN = `(${NUMBER_PATTERN})\\\\s*(${matchAnyPattern(TIME_UNIT_DICTIONARY)})\\\\s*`;\nconst SINGLE_TIME_UNIT_REGEX = new RegExp(SINGLE_TIME_UNIT_PATTERN, 'i');\n\nconst SINGLE_TIME_UNIT_PATTERN_NO_CAPTURE = SINGLE_TIME_UNIT_PATTERN.replace(/\\((?!\\?)/g, '(?:');\n\nexport const TIME_UNITS_PATTERN = `(?:${SINGLE_TIME_UNIT_PATTERN_NO_CAPTURE})+`;\n\nexport function parseTimeUnits(timeunitText) : {[c: OpUnitType]: number} {\n    const fragments = {};\n    let remainingText = timeunitText;\n    let match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(fragments, match);\n        remainingText = remainingText.substring(match[0].length);\n        match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    }\n    return fragments;\n}\n\nfunction collectDateTimeFragment(fragments, match) {\n    const num = parseNumberPattern(match[1]);\n    const unit = TIME_UNIT_DICTIONARY[match[2].toLowerCase()]\n    fragments[unit] = num;\n}","import {Component, ParsedComponents, ParsedResult} from \"./index\";\n\nimport dayjs, {OpUnitType} from 'dayjs';\n\nexport class ParsingComponents implements ParsedComponents {\n    private knownValues: {[c: Component]: number}\n    private impliedValues: {[c: Component]: number}\n\n    constructor(\n        refDate: Date,\n        knownComponents?: {[c: Component]: string|number},\n    ) {\n        this.knownValues = {};\n        this.impliedValues = {};\n        if (knownComponents) {\n            for (const key in knownComponents) {\n                this.knownValues[key] = knownComponents[key];\n            }\n        }\n\n        const refDayJs = dayjs(refDate);\n        this.imply('day', refDayJs.date());\n        this.imply('month', refDayJs.month() + 1);\n        this.imply('year', refDayJs.year())\n        this.imply('hour', 12);\n        this.imply('minute', 0);\n        this.imply('second', 0);\n        this.imply('millisecond', 0);\n    }\n\n    get(component: Component) : (number | null) {\n\n        if (component in this.knownValues) {\n            return this.knownValues[component];\n        }\n\n        if (component in this.impliedValues) {\n            return this.impliedValues[component];\n        }\n\n        return null;\n    }\n\n    date() : Date {\n        return this.dayjs().toDate();\n    }\n\n    isCertain(component: Component) : boolean {\n        return component in this.knownValues;\n    }\n\n    getCertainComponents() : Array<Component> {\n        return Object.keys(this.knownValues) as Array<Component>\n    }\n\n    imply(component: Component, value: number) : ParsingComponents {\n        if (component in this.knownValues) return;\n        this.impliedValues[component] = value;\n        return this;\n    }\n\n    assign(component: Component, value: number) : ParsingComponents{\n        this.knownValues[component] = value;\n        delete this.impliedValues[component];\n        return this;\n    }\n\n    clone() : ParsingComponents {\n        const component = new ParsingComponents(new Date());\n        component.knownValues = {};\n        component.impliedValues = {};\n\n        for (const key in this.knownValues) {\n            component.knownValues[key] = this.knownValues[key];\n        }\n\n        for (const key in this.impliedValues) {\n            component.impliedValues[key] = this.impliedValues[key];\n        }\n\n        return component;\n    }\n\n    isOnlyDate() : boolean {\n        return !this.isCertain('hour') && !this.isCertain('minute') && !this.isCertain('second');\n    }\n\n    isOnlyTime() : boolean {\n        return !this.isCertain('weekday') && !this.isCertain('day') && !this.isCertain('month');\n    }\n\n    isOnlyWeekdayComponent() : boolean {\n        return this.isCertain('weekday') && !this.isCertain('day') && !this.isCertain('month');\n    }\n\n    isOnlyDayMonthComponent() : boolean {\n        return this.isCertain('day') && this.isCertain('month') && !this.isCertain('year');\n    }\n\n    isValidDate() : boolean {\n        let dateMoment = this.dayjs();\n        if (this.isCertain('timezoneOffset')) {\n            const adjustTimezoneOffset = this.get('timezoneOffset') - dateMoment.utcOffset();\n            dateMoment = dateMoment.add(adjustTimezoneOffset, 'minute');\n        }\n\n        if (dateMoment.get('year') != this.get('year')) return false;\n        if (dateMoment.get('month') != this.get('month')-1) return false;\n        if (dateMoment.get('date') != this.get('day')) return false;\n        if (dateMoment.get('hour') != this.get('hour')) return false;\n        if (dateMoment.get('minute') != this.get('minute')) return false;\n\n        return true;\n    }\n\n    dayjs() {\n        let result = dayjs();\n\n        result = result.year(this.get('year'));\n        result = result.month(this.get('month') - 1);\n        result = result.date(this.get('day'));\n        result = result.hour(this.get('hour'));\n        result = result.minute(this.get('minute'));\n        result = result.second(this.get('second'));\n        result = result.millisecond(this.get('millisecond'));\n\n        // Javascript Date Object return minus timezone offset\n        const currentTimezoneOffset = result.utcOffset();\n        const targetTimezoneOffset = this.get('timezoneOffset') !== null ?\n            this.get('timezoneOffset') : currentTimezoneOffset;\n\n        const adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n        result = result.add(-adjustTimezoneOffset, 'minute');\n\n        return result;\n    }\n\n    toString() {\n        return `[ParsingComponents {knownValues: ${JSON.stringify(this.knownValues)}, impliedValues: ${JSON.stringify(this.impliedValues)}}]`;\n    }\n\n\n    static createRelativeFromRefDate(refDate:Date, fragments: {[c: OpUnitType]: number}) : ParsingComponents{\n        let date = dayjs(refDate);\n        for (const key in fragments) {\n            date = date.add(fragments[key], key);\n        }\n\n        const components = new ParsingComponents(refDate);\n        if (fragments['hour'] || fragments['minute'] || fragments['second']) {\n            components.assign('hour', date.hour());\n            components.assign('minute', date.minute());\n            components.assign('second', date.second());\n        }\n\n        if (fragments['d'] || fragments['month'] || fragments['year']) {\n            components.assign('day', date.date());\n            components.assign('month', date.month() + 1);\n            components.assign('year', date.year());\n        } else {\n            if (fragments['week']) {\n                components.imply('weekday', date.day());\n            }\n\n            components.imply('day', date.date());\n            components.imply('month', date.month() + 1);\n            components.imply('year', date.year());\n        }\n\n        return components;\n    }\n}\n\nexport class ParsingResult implements ParsedResult {\n\n    refDate: Date;\n    index: number;\n    text: string;\n\n    start: ParsingComponents;\n    end?: ParsingComponents;\n\n    constructor(\n        refDate: Date,\n        index: number,\n        text: string,\n        start?: ParsingComponents,\n        end?: ParsingComponents,\n    ) {\n        this.refDate = refDate;\n        this.index = index;\n        this.text  = text;\n        this.start = start || new ParsingComponents(this.refDate);\n        this.end = end;\n    }\n\n    clone() {\n        const result = new ParsingResult(this.refDate, this.index, this.text);\n        result.start = this.start ? this.start.clone() : null;\n        result.end = this.end ? this.end.clone() : null;\n        return result\n    }\n\n    date(): Date {\n        return this.start.date();\n    }\n\n    toString() {\n        return `[ParsingResult {index: ${this.index}, text: '${this.text}', ...}]`;\n    }\n}","import {TIME_UNITS_PATTERN, parseTimeUnits} from '../constants';\nimport {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingComponents} from \"../../../results\";\n\nconst PATTERN = new RegExp(\n    `(?:within|in)\\\\s*` +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    `(?=\\\\W|$)`, 'i'\n);\n\nconst STRICT_PATTERN = new RegExp(\n    `(?:within|in)\\\\s*` +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    `(?=\\\\W|$)`, 'i'\n);\n\nexport default class ENTimeUnitDeadlineFormatParser implements Parser {\n    constructor(private strictMode: boolean) {}\n\n    pattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n        const timeUnits = parseTimeUnits(match[1]);\n        return ParsingComponents.createRelativeFromRefDate(context.refDate, timeUnits);\n    }\n}\n","import dayjs from \"dayjs\";\n\n\nexport function findYearClosestToRef(refDate: Date, day: number, month: number) : number {\n\n    //Find the most appropriated year\n    const refMoment = dayjs(refDate);\n    let dateMoment = refMoment;\n    dateMoment = dateMoment.month(month - 1);\n    dateMoment = dateMoment.date(day);\n    dateMoment = dateMoment.year(refMoment.year())\n\n    const nextYear = dateMoment.add(1, 'y');\n    const lastYear = dateMoment.add(-1, 'y');\n    if( Math.abs(nextYear.diff(refMoment)) < Math.abs(dateMoment.diff(refMoment)) ){\n        dateMoment = nextYear;\n    }\n    else if( Math.abs(lastYear.diff(refMoment)) < Math.abs(dateMoment.diff(refMoment)) ){\n        dateMoment = lastYear;\n    }\n\n    return dateMoment.year();\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingResult} from \"../../../results\";\nimport {findYearClosestToRef} from \"../../../calculation/yearCalculation\";\nimport {MONTH_DICTIONARY, WEEKDAY_DICTIONARY,} from \"../constants\";\nimport {YEAR_PATTERN, parseYear} from \"../constants\";\nimport {ORDINAL_NUMBER_PATTERN, parseOrdinalNumberPattern} from \"../constants\";\nimport {matchAnyPattern} from \"../../../utils/pattern\";\n\n\nconst PATTERN = new RegExp(\n        '(?:on\\\\s*?)?' +\n        `(?:(${matchAnyPattern(WEEKDAY_DICTIONARY)})\\\\s*,?\\\\s*)?` +\n        `(${ORDINAL_NUMBER_PATTERN})` +\n        '(?:\\\\s*' +\n            '(?:to|\\\\-|\\\\–|until|through|till|\\\\s)\\\\s*' +\n            `(${ORDINAL_NUMBER_PATTERN})` +\n        ')?' + \n        '(?:-|/|\\\\s*(?:of)?\\\\s*)' +\n        '(' + matchAnyPattern(MONTH_DICTIONARY) + ')' +\n        '(?:' +\n            '(?:-|/|,?\\\\s*)' +\n            `(${YEAR_PATTERN}(?![^\\\\s]\\\\d))` +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nconst WEEKDAY_GROUP = 1;\nconst DATE_GROUP = 2;\nconst DATE_TO_GROUP = 3;\nconst MONTH_NAME_GROUP = 4;\nconst YEAR_GROUP = 5;\n\nexport default class ENMonthNameLittleEndianParser implements Parser {\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingResult {\n        //console.log(match)\n\n        const result = context.createParsingResult(match.index, match[0]);\n\n        const month = MONTH_DICTIONARY[match[MONTH_NAME_GROUP].toLowerCase()];\n        const day = parseOrdinalNumberPattern(match[DATE_GROUP]);\n\n        result.start.assign('month', month);\n        result.start.assign('day', day);\n\n        if (match[WEEKDAY_GROUP]) {\n            const weekday = WEEKDAY_DICTIONARY[match[WEEKDAY_GROUP].toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        if (match[YEAR_GROUP]) {\n            const yearNumber = parseYear(match[YEAR_GROUP])\n            result.start.assign('year', yearNumber)\n        } else {\n            const year = findYearClosestToRef(context.refDate, day, month);\n            result.start.imply('year', year)\n        }\n\n        if (match[DATE_TO_GROUP]) {\n            const endDate = parseOrdinalNumberPattern(match[DATE_TO_GROUP]);\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        return result;\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {findYearClosestToRef} from \"../../../calculation/yearCalculation\";\nimport {MONTH_DICTIONARY, WEEKDAY_DICTIONARY} from \"../constants\";\nimport {ORDINAL_NUMBER_PATTERN, parseOrdinalNumberPattern} from \"../constants\";\nimport {YEAR_PATTERN, parseYear} from \"../constants\";\nimport {matchAnyPattern} from \"../../../utils/pattern\";\n\nconst PATTERN = new RegExp(\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        `(${matchAnyPattern(WEEKDAY_DICTIONARY)})` +\n    '\\\\s*,?\\\\s*)?' +\n    `(${matchAnyPattern(MONTH_DICTIONARY)})` +\n    '(?:-|/|\\\\s*,?\\\\s*)' +\n    `(${ORDINAL_NUMBER_PATTERN})(?!\\\\s*(?:am|pm))\\\\s*`+\n    '(?:' +\n        '(?:to|\\\\-)\\\\s*' +\n        `(${ORDINAL_NUMBER_PATTERN})\\\\s*` +\n    ')?' +\n    '(?:' +\n        '(?:-|/|\\\\s*,?\\\\s*)' +\n        `(${YEAR_PATTERN})` +\n    ')?' +\n    '(?=\\\\W|$)(?!\\\\:\\\\d)', 'i');\n\nconst WEEKDAY_GROUP = 1;\nconst MONTH_NAME_GROUP = 2;\nconst DATE_GROUP = 3;\nconst DATE_TO_GROUP = 4;\nconst YEAR_GROUP = 5;\n\n/**\n * The parser for parsing US's date format that begin with month's name.\n *  - January 13\n *  - January 13, 2012\n *  - January 13 - 15, 2012\n *  - Tuesday, January 13, 2012\n * Note: Watch out for:\n *  - January 12:00\n *  - January 12.44\n *  - January 1222344\n */\nexport default class ENMonthNameMiddleEndianParser implements Parser {\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const month = MONTH_DICTIONARY[match[MONTH_NAME_GROUP].toLowerCase()];\n        const day = parseOrdinalNumberPattern(match[DATE_GROUP]);\n\n        const components = context.createParsingComponents({\n            'day': day, 'month': month\n        });\n\n        if (match[YEAR_GROUP]) {\n            const year = parseYear(match[YEAR_GROUP])\n            components.assign('year', year)\n        } else {\n            const year = findYearClosestToRef(context.refDate, day, month)\n            components.imply('year', year)\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            const weekday = WEEKDAY_DICTIONARY[match[WEEKDAY_GROUP].toLowerCase()]\n            components.assign('weekday', weekday);\n        }\n\n        if (!match[DATE_TO_GROUP]) {\n            return components\n        }\n\n        // Text can be 'range' value. Such as 'January 12 - 13, 2012'\n        const endDate = parseOrdinalNumberPattern(match[DATE_TO_GROUP]);\n        const result = context.createParsingResult(match.index, match[0])\n        result.start = components;\n        result.end = components.clone();\n        result.end.assign('day', endDate);\n\n        return result;\n    }\n\n}","import {MONTH_DICTIONARY} from \"../constants\";\nimport {Parser, ParsingContext} from \"../../../chrono\";\nimport {findYearClosestToRef} from \"../../../calculation/yearCalculation\";\nimport {matchAnyPattern} from \"../../../utils/pattern\";\nimport {YEAR_PATTERN, parseYear} from \"../constants\";\n\nconst PATTERN = new RegExp(\n    `(${matchAnyPattern(MONTH_DICTIONARY)})` +\n    '\\\\s*' +\n    '(?:' +\n        `[,-]?\\\\s*(${YEAR_PATTERN})?` +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|\\\\s+[^0-9]|\\\\s+$|$)', 'i');\n\nconst MONTH_NAME_GROUP = 1;\nconst YEAR_GROUP = 2;\n\n/**\n * The parser for parsing month name and year.\n * - January, 2012\n * - January 2012\n * - January\n */\nexport default class ENMonthNameParser implements Parser {\n\n    pattern(): RegExp {return PATTERN; }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        if (match[0].length <= 3) {\n            return null;\n        }\n\n        const components = context.createParsingComponents()\n        components.imply('day', 1);\n\n        const monthName = match[MONTH_NAME_GROUP];\n        const month = MONTH_DICTIONARY[monthName.toLowerCase()];\n        components.assign('month', month);\n\n        if (match[YEAR_GROUP]) {\n            const year = parseYear(match[YEAR_GROUP]);\n            components.assign('year', year)\n        } else {\n            const year = findYearClosestToRef(context.refDate, 1, month)\n            components.imply('year', year)\n        }\n\n        return components;\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingResult} from \"../../../results\";\nimport dayjs from \"dayjs\";\nimport {parseYear} from \"../constants\";\nimport {findYearClosestToRef} from \"../../../calculation/yearCalculation\";\n\n\nconst PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '((?:sun|mon|tues?|wed(?:nes)?|thu(?:rs?)?|fri|sat(?:ur)?)(?:day)?)' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\\\s*\\\\,?\\\\s*|[0-9]{2}\\\\s*\\\\,?\\\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nconst DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thur': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6,}\n\n\nconst OPENING_GROUP = 1;\nconst ENDING_GROUP = 6;\n\nconst WEEKDAY_GROUP = 2;\n\nconst FIRST_NUMBERS_GROUP = 3;\nconst SECOND_NUMBERS_GROUP = 4;\n\nconst YEAR_GROUP = 5;\n\nexport default class ENSlashDateFormatParser implements Parser {\n    groupNumberMonth: number;\n    groupNumberDay: number;\n\n    constructor(littleEndian: boolean) {\n        this.groupNumberMonth = littleEndian ? SECOND_NUMBERS_GROUP : FIRST_NUMBERS_GROUP;\n        this.groupNumberDay = littleEndian ? FIRST_NUMBERS_GROUP : SECOND_NUMBERS_GROUP;\n    }\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingResult {\n\n        if(match[OPENING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        const index = match.index + match[OPENING_GROUP].length;\n        const text = match[0].substr(match[OPENING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n        // '1.12', '1.12.12' is more like a version numbers\n        if(text.match(/^\\d\\.\\d$/) || text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}\\s*$/)) {\n            return;\n        }\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) {\n            return;\n        }\n\n        const result = context.createParsingResult(index, text);\n        let month = parseInt(match[this.groupNumberMonth]);\n        let day   = parseInt(match[this.groupNumberDay]);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                if (day >= 1 && day <= 12 && month <= 31) {\n                    [day, month] = [month, day]\n                } else {\n                    return null;\n                }\n            }\n        }\n\n        if (day < 1 || day > 31) {\n            return null;\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n\n        if (match[YEAR_GROUP]) {\n            const year = parseYear(match[YEAR_GROUP]) || dayjs(context.refDate).year();\n            result.start.assign('year', year);\n        } else {\n            const year = findYearClosestToRef(context.refDate, day, month);\n            result.start.imply('year', year);\n        }\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        return result;\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {MONTH_DICTIONARY} from \"../constants\";\nimport {matchAnyPattern} from \"../../../utils/pattern\";\n\n/*\n    Date format with slash \"/\" between numbers like ENSlashDateFormatParser,\n    but this parser expect year before month and date.\n    - YYYY/MM/DD\n    - YYYY-MM-DD\n    - YYYY.MM.DD\n*/\nconst PATTERN = new RegExp('([0-9]{4})[\\\\.\\\\/]'\n    + '(?:(' + matchAnyPattern(MONTH_DICTIONARY) + ')|([0-9]{1,2}))[\\\\.\\\\/]'\n    + '([0-9]{1,2})'\n    + '(?=\\\\W|$)', 'i');\n\nconst YEAR_NUMBER_GROUP = 1;\nconst MONTH_NAME_GROUP = 2;\nconst MONTH_NUMBER_GROUP = 3;\nconst DATE_NUMBER_GROUP  = 4;\n\nexport default class ENSlashDateFormatStartWithYearParser implements Parser {\n\n    pattern(): RegExp { return PATTERN; }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const month = match[MONTH_NUMBER_GROUP] ? parseInt(match[MONTH_NUMBER_GROUP]) :\n            MONTH_DICTIONARY[match[MONTH_NAME_GROUP].toLowerCase()];\n\n        const year = parseInt(match[YEAR_NUMBER_GROUP]);\n        const day = parseInt(match[DATE_NUMBER_GROUP]);\n\n        return {\n            'day': day,\n            'month': month,\n            'year': year\n        }\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingComponents} from \"../../../results\";\n\nconst PATTERN = new RegExp(\n    '([0-9]|0[1-9]|1[012])/([0-9]{4})' +\n    '', 'i');\n\nconst MONTH_GROUP = 1;\nconst YEAR_GROUP = 2;\n\n/**\n * Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers\n * - 11/05\n * - 06/2005\n */\nexport default class ENSlashMonthFormatParser implements Parser {\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n\n        const year = parseInt(match[YEAR_GROUP]);\n        const month = parseInt(match[MONTH_GROUP]);\n\n        return context.createParsingComponents()\n            .imply('day', 1)\n            .assign('month', month)\n            .assign('year', year)\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingResult} from \"../../../results\";\nimport dayjs from \"dayjs\";\nimport {Meridiem} from \"../../../index\";\n\nconst FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:at|from)\\\\s*)??\" +\n    \"(\\\\d{1,4}|noon|midnight)\" +\n    \"(?:\" +\n    \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n    \"(?:\" +\n    \"(?:\\\\:|\\\\：)(\\\\d{2})(?:\\\\.(\\\\d{1,6}))?\" +\n    \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(a\\\\.m\\\\.|p\\\\.m\\\\.|am?|pm?|o\\\\W*clock))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nconst SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|to|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n    \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n    \"(?:\" +\n    \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})(?:\\\\.(\\\\d{1,6}))?\" +\n    \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(a\\\\.m\\\\.|p\\\\.m\\\\.|am?|pm?|o\\\\W*clock|at night))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nconst HOUR_GROUP    = 2;\nconst MINUTE_GROUP  = 3;\nconst SECOND_GROUP  = 4;\nconst MILLI_SECOND_GROUP  = 5;\nconst AM_PM_HOUR_GROUP = 6;\n\nexport default class ENTimeExpressionParser implements Parser {\n\n    pattern(): RegExp {\n        return FIRST_REG_PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingResult {\n        const refDate = dayjs(context.refDate);\n        let result = context.createParsingResult(\n            match.index + match[1].length, match[0].substring(match[1].length));\n\n        if (result.text.match(/^\\d$/)) {\n            return null;\n        }\n\n        result.start.imply('day',   refDate.date());\n        result.start.imply('month', refDate.month()+1);\n        result.start.imply('year',  refDate.year());\n\n        result = ENTimeExpressionParser.extractStartTimeComponent(result.clone(), match)\n        if (!result) {\n            return null;\n        }\n\n        const remainingText = context.text.substring(match.index + match[0].length)\n        match = SECOND_REG_PATTERN.exec(remainingText);\n        if (!match) {\n            return result;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*([+-])\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        const newResult = ENTimeExpressionParser.extractEndTimeComponent(result.clone(), match);\n        return newResult ? newResult : result;\n    }\n\n    private static extractStartTimeComponent(result: ParsingResult, match: RegExpMatchArray) : ParsingResult | null {\n\n        let hour = 0;\n        let minute = 0;\n        let meridiem = null;\n\n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase() == \"noon\"){\n            meridiem = Meridiem.PM;\n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"midnight\") {\n            meridiem = Meridiem.AM;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = Math.floor(hour/100);\n        }\n\n        if(minute >= 60 || hour > 24) {\n            return null;\n        }\n\n        if (hour >= 12) {\n            meridiem = Meridiem.PM;\n        }\n\n        // ----- AM & PM\n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            const ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = Meridiem.AM;\n                if (hour == 12) {\n                    hour = 0;\n                }\n            }\n\n            if(ampm == \"p\"){\n                meridiem = Meridiem.PM;\n                if (hour != 12) {\n                    hour += 12;\n                }\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem !== null) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', Meridiem.AM);\n            } else {\n                result.start.imply('meridiem', Meridiem.PM);\n            }\n        }\n\n        // ----- Millisecond\n        if(match[MILLI_SECOND_GROUP] != null) {\n            const millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if(millisecond >= 1000) return null;\n\n            result.start.assign('millisecond', millisecond);\n        }\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            const second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        return result;\n    }\n\n    private static extractEndTimeComponent(result: ParsingResult, match: RegExpMatchArray) : ParsingResult | null {\n\n        result.end = result.start.clone();\n\n        // ----- Millisecond\n        if(match[MILLI_SECOND_GROUP] != null){\n            const millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if(millisecond >= 1000) return null;\n\n            result.end.assign('millisecond', millisecond);\n        }\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            const second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n\n        let hour = parseInt(match[HOUR_GROUP]);\n        let minute = 0;\n        let meridiem = -1;\n\n        // ----- Minute\n        if (match[MINUTE_GROUP] != null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = Math.floor(hour/100);\n        }\n\n        if(minute >= 60 || hour > 24) {\n            return null;\n        }\n\n        if (hour >= 12) {\n            meridiem = Meridiem.PM;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12) {\n                return null;\n            }\n\n            const ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = Meridiem.AM;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n\n            if(ampm == \"p\"){\n                meridiem = Meridiem.PM;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == Meridiem.AM) {\n\n                    result.start.imply('meridiem', Meridiem.AM);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', Meridiem.PM);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            const startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == Meridiem.PM;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', Meridiem.AM);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', Meridiem.PM);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {\n    parseTimeUnits,\n    TIME_UNITS_PATTERN\n} from \"../constants\";\nimport {ParsingComponents} from \"../../../results\";\n\n\nconst PATTERN = new RegExp('' +\n    '(?:within\\\\s*)?' +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    '(?:ago|before|earlier)(?=(?:\\\\W|$))', 'i');\n\nconst STRICT_PATTERN = new RegExp('' +\n    '(?<=\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    'ago(?=(?:\\\\W|$))', 'i');\n\nexport default class ENTimeUnitAgoFormatParser implements Parser {\n\n    constructor(private strictMode: boolean) {}\n\n    pattern(): RegExp { return this.strictMode ? STRICT_PATTERN : PATTERN; }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const fragments = parseTimeUnits(match[1]);\n        for (const key in fragments) {\n            fragments[key] = -fragments[key];\n        }\n\n        return ParsingComponents.createRelativeFromRefDate(context.refDate, fragments);\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {\n    parseTimeUnits,\n    TIME_UNITS_PATTERN\n} from \"../constants\";\nimport {ParsingComponents} from \"../../../results\";\n\n\nconst PATTERN = new RegExp('' +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    '(later|after|from now|henceforth|forward|out)' +\n    '(?=(?:\\\\W|$))',\n'i');\n\nconst STRICT_PATTERN = new RegExp('' +\n    '(' + TIME_UNITS_PATTERN + ')' +\n    '(later|from now)' +\n    '(?=(?:\\\\W|$))',\n'i');\n\nconst GROUP_NUM_SUFFIX = 2\nconst GROUP_NUM_TIMEUNITS = 1\n\nexport default class ENTimeUnitLaterFormatParser implements Parser {\n\n    constructor(private strictMode: boolean) {}\n\n    pattern(): RegExp { return this.strictMode ? STRICT_PATTERN : PATTERN; }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const suffix = match[GROUP_NUM_SUFFIX].toLowerCase().trim();\n        if (!suffix) {\n            return null;\n        }\n\n        const fragments = parseTimeUnits(match[GROUP_NUM_TIMEUNITS]);\n        return ParsingComponents.createRelativeFromRefDate(context.refDate, fragments);\n    }\n}\n","import {ParsingContext, Refiner} from \"../chrono\";\nimport {ParsingResult} from \"../results\";\n\nexport abstract class Filter implements Refiner {\n\n    abstract isValid(context: ParsingContext, result: ParsingResult): boolean;\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n        return results.filter(r => this.isValid(context, r));\n    }\n}\n\nexport abstract class MergingRefiner implements Refiner {\n\n    abstract shouldMergeResults(textBetween: string, currentResult: ParsingResult, nextResult: ParsingResult, context: ParsingContext): boolean;\n\n    abstract mergeResults(textBetween: string, currentResult: ParsingResult, nextResult: ParsingResult, context: ParsingContext): ParsingResult;\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n\n        if (results.length < 2) {\n            return results;\n        }\n\n        const mergedResults: ParsingResult[] = [];\n        let curResult = results[0];\n        let nextResult = null;\n\n        for (let i=1; i<results.length; i++){\n            nextResult = results[i];\n\n            const textBetween = context.text.substring(curResult.index + curResult.text.length, nextResult.index);\n            if (!this.shouldMergeResults(textBetween, curResult, nextResult, context)) {\n                mergedResults.push(curResult);\n                curResult = nextResult;\n            } else {\n                const left = curResult;\n                const right = nextResult;\n                const mergedResult = this.mergeResults(textBetween, left, right, context);\n                context.debug(() => {\n                    console.log(`${this.constructor.name} merged ${left} and ${right} into ${mergedResult}`)\n                })\n\n                curResult = mergedResult;\n            }\n        }\n\n        if (curResult != null) {\n            mergedResults.push(curResult);\n        }\n\n        return mergedResults;\n    }\n}","/*\n  \n*/\n\nimport {ParsingResult} from \"../../results\";\nimport {MergingRefiner} from \"../abstractRefiners\";\n\nexport default abstract class AbstractMergeDateRangeRefiner extends MergingRefiner {\n\n    abstract patternBetween(): RegExp\n\n    shouldMergeResults(textBetween, currentResult, nextResult): boolean {\n        return (!currentResult.end && !nextResult.end)\n            && textBetween.match(this.patternBetween()) != null;\n    }\n\n    mergeResults(textBetween, fromResult, toResult): ParsingResult {\n\n        if (!fromResult.start.isOnlyWeekdayComponent() && !toResult.start.isOnlyWeekdayComponent()) {\n\n            toResult.start.getCertainComponents().forEach(key => {\n                if (!fromResult.start.isCertain(key)) {\n                    fromResult.start.assign(key, toResult.start.get(key));\n                }\n            })\n\n            fromResult.start.getCertainComponents().forEach(key => {\n                if (!toResult.start.isCertain(key)) {\n                    toResult.start.assign(key, fromResult.start.get(key));\n                }\n            })\n        }\n\n        if (fromResult.start.date().getTime() > toResult.start.date().getTime()) {\n            let fromMoment = fromResult.start.dayjs();\n            let toMoment = toResult.start.dayjs();\n\n            if (fromResult.start.isOnlyWeekdayComponent() && fromMoment.add(-7, 'days').isBefore(toMoment)) {\n                fromMoment = fromMoment.add(-7, 'days');\n                fromResult.start.imply('day', fromMoment.date());\n                fromResult.start.imply('month', fromMoment.month() + 1);\n                fromResult.start.imply('year', fromMoment.year());\n            } else if (toResult.start.isOnlyWeekdayComponent() && toMoment.add(7, 'days').isAfter(fromMoment)) {\n                toMoment = toMoment.add(7, 'days');\n                toResult.start.imply('day', toMoment.date());\n                toResult.start.imply('month', toMoment.month() + 1);\n                toResult.start.imply('year', toMoment.year());\n            } else {\n                [toResult, fromResult] = [fromResult, toResult];\n            }\n        }\n\n        const result = fromResult.clone();\n        result.start = fromResult.start;\n        result.end = toResult.start;\n        result.index = Math.min(fromResult.index, toResult.index);\n        if (fromResult.index < toResult.index) {\n            result.text = fromResult.text + textBetween + toResult.text;\n        } else {\n            result.text = toResult.text + textBetween + fromResult.text;\n        }\n\n        return result;\n    }\n}\n\n","/*\n  \n*/\n\n\nimport AbstractMergeDateRangeRefiner from \"../../../common/refiners/AbstractMergeDateRangeRefiner\";\n\n/**\n * Merging before and after results (see. AbstractMergeDateRangeRefiner)\n * This implementation should provide English connecting phases\n * - 2020-02-13 [to] 2020-02-13\n * - Wednesday [-] Friday\n */\nexport default class ENMergeDateRangeRefiner extends AbstractMergeDateRangeRefiner {\n\n    patternBetween(): RegExp {\n        return /^\\s*(to|-)\\s*$/i;\n    }\n}\n\n","import {ParsingComponents, ParsingResult} from \"../results\";\nimport {Meridiem} from \"../index\";\n\nexport function mergeDateTimeResult(\n    dateResult: ParsingResult,\n    timeResult: ParsingResult): ParsingResult {\n\n    const result = dateResult.clone();\n    const beginDate = dateResult.start;\n    const beginTime = timeResult.start;\n\n    result.start = mergeDateTimeComponent(beginDate, beginTime);\n    if (dateResult.end != null || timeResult.end != null) {\n        const endDate   = dateResult.end == null ? dateResult.start : dateResult.end;\n        const endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n        const endDateTime = mergeDateTimeComponent(endDate, endTime);\n\n        if (dateResult.end == null && endDateTime.date().getTime() < result.start .date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        result.end = endDateTime;\n    }\n\n    return result;\n}\n\nexport function mergeDateTimeComponent(dateComponent: ParsingComponents, timeComponent: ParsingComponents): ParsingComponents {\n    const dateTimeComponent = dateComponent.clone();\n\n    if (timeComponent.isCertain('hour')) {\n        dateTimeComponent.assign('hour', timeComponent.get('hour'));\n        dateTimeComponent.assign('minute', timeComponent.get('minute'));\n\n        if (timeComponent.isCertain('second')) {\n            dateTimeComponent.assign('second', timeComponent.get('second'));\n\n            if (timeComponent.isCertain('millisecond')) {\n                dateTimeComponent.assign('millisecond', timeComponent.get('millisecond'));\n            } else {\n                dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n            }\n        } else {\n            dateTimeComponent.imply('second', timeComponent.get('second'));\n            dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n        }\n\n    } else {\n        dateTimeComponent.imply('hour', timeComponent.get('hour'));\n        dateTimeComponent.imply('minute', timeComponent.get('minute'));\n        dateTimeComponent.imply('second', timeComponent.get('second'));\n        dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n    }\n\n    if (timeComponent.isCertain('timezoneOffset')) {\n        dateTimeComponent.assign('timezoneOffset', timeComponent.get('timezoneOffset'))\n    }\n\n    if (timeComponent.isCertain('meridiem')) {\n        dateTimeComponent.assign('meridiem', timeComponent.get('meridiem'));\n    } else if (\n        timeComponent.get('meridiem') != null && dateTimeComponent.get('meridiem') == null\n    ) {\n        dateTimeComponent.imply('meridiem', timeComponent.get('meridiem'));\n    }\n\n    if (dateTimeComponent.get('meridiem') == Meridiem.PM && dateTimeComponent.get('hour') < 12) {\n        if (timeComponent.isCertain('hour')) {\n            dateTimeComponent.assign('hour', dateTimeComponent.get('hour') + 12);\n        } else {\n            dateTimeComponent.imply('hour', dateTimeComponent.get('hour') + 12);\n        }\n    }\n\n    return dateTimeComponent;\n}\n\n","/*\n\n*/\n\n\nimport {MergingRefiner} from \"../abstractRefiners\";\nimport {ParsingResult} from \"../../results\";\nimport {mergeDateTimeResult} from \"../../calculation/mergingCalculation\";\n\n\nexport default abstract class ENMergeDateTimeRefiner extends MergingRefiner {\n\n    abstract patternBetween(): RegExp\n\n    shouldMergeResults(textBetween: string, currentResult: ParsingResult, nextResult: ParsingResult): boolean {\n        return (\n                (currentResult.start.isOnlyDate() && nextResult.start.isOnlyTime()) ||\n                (nextResult.start.isOnlyDate() && currentResult.start.isOnlyTime())\n            )\n            && textBetween.match(this.patternBetween()) != null;\n    }\n\n    mergeResults(textBetween: string, currentResult: ParsingResult, nextResult: ParsingResult): ParsingResult {\n\n        const result = currentResult.start.isOnlyDate() ?\n            mergeDateTimeResult(currentResult, nextResult):\n            mergeDateTimeResult(nextResult, currentResult);\n\n        result.index = currentResult.index;\n        result.text = currentResult.text + textBetween + nextResult.text;\n        return result;\n    }\n}\n\n","import AbstractMergeDateTimeRefiner from \"../../../common/refiners/AbstractMergeDateTimeRefiner\";\n\n/**\n * Merging date-only result and time-only result (see. AbstractMergeDateTimeRefiner).\n * This implementation should provide English connecting phases\n * - 2020-02-13 [at] 6pm\n * - Tomorrow [after] 7am\n */\nexport default class ENMergeDateTimeRefiner extends AbstractMergeDateTimeRefiner {\n    patternBetween(): RegExp {\n        return new RegExp(\"^\\\\s*(T|at|after|before|on|of|,|-)?\\\\s*$\");\n    }\n}\n\n","\n// Map ABBR -> Offset in minute\nimport {ParsingContext, Refiner} from \"../../chrono\";\nimport {ParsingResult} from \"../../results\";\n\nconst TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\nconst DEFAULT_TIMEZONE_ABBR_MAP = {\n    \"ACDT\":630,\"ACST\":570,\"ADT\":-180,\"AEDT\":660,\"AEST\":600,\"AFT\":270,\"AKDT\":-480,\"AKST\":-540,\"ALMT\":360,\"AMST\":-180,\"AMT\":-240,\"ANAST\":720,\"ANAT\":720,\"AQTT\":300,\"ART\":-180,\"AST\":-240,\"AWDT\":540,\"AWST\":480,\"AZOST\":0,\"AZOT\":-60,\"AZST\":300,\"AZT\":240,\"BNT\":480,\"BOT\":-240,\"BRST\":-120,\"BRT\":-180,\"BST\":60,\"BTT\":360,\"CAST\":480,\"CAT\":120,\"CCT\":390,\"CDT\":-300,\"CEST\":120,\"CET\":60,\"CHADT\":825,\"CHAST\":765,\"CKT\":-600,\"CLST\":-180,\"CLT\":-240,\"COT\":-300,\"CST\":-360,\"CVT\":-60,\"CXT\":420,\"ChST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":330,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360\n};\n\nexport default class ExtractTimezoneAbbrRefiner implements Refiner {\n\n    private readonly timezone: {string: number}\n\n    constructor(timezoneOverrides? : {string: number}) {\n        this.timezone = {...DEFAULT_TIMEZONE_ABBR_MAP, ...timezoneOverrides};\n    }\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n        const timezones = {...this.timezone, ...context.option.timezones};\n        results.forEach((result) => {\n            const suffix = context.text.substring(result.index + result.text.length)\n            const match = TIMEZONE_NAME_PATTERN.exec(suffix);\n            if (match) {\n                const timezoneAbbr = match[1].toUpperCase();\n                if (timezones[timezoneAbbr] === undefined) {\n                    return;\n                }\n\n                const timezoneOffset = timezones[timezoneAbbr];\n                if (!result.start.isCertain('timezoneOffset')) {\n                    result.start.assign('timezoneOffset', timezoneOffset);\n                }\n\n                if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n                    result.end.assign('timezoneOffset', timezoneOffset);\n                }\n\n                result.text += match[0];\n            }\n        });\n\n        return results;\n    }\n}","/*\n  \n*/\n\n\nimport {ParsingContext, Refiner} from \"../../chrono\";\nimport {ParsingResult} from \"../../results\";\n\nconst TIMEZONE_OFFSET_PATTERN = new RegExp(\"^\\\\s*(GMT|UTC)?([+-])(\\\\d{1,2}):?(\\\\d{2})\", 'i');\nconst TIMEZONE_OFFSET_SIGN_GROUP = 2;\nconst TIMEZONE_OFFSET_HOUR_OFFSET_GROUP = 3;\nconst TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP = 4;\n\nexport default class ExtractTimezoneOffsetRefiner implements Refiner {\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n\n        results.forEach(function(result) {\n            if (result.start.isCertain('timezoneOffset')) {\n                return;\n            }\n\n            const suffix = context.text.substring(result.index + result.text.length);\n            const match = TIMEZONE_OFFSET_PATTERN.exec(suffix);\n            if (!match) {\n                return;\n            }\n\n            context.debug(() => {\n                console.log(`Extracting timezone: '${match[0]}' into : ${result}`)\n            })\n\n            const hourOffset = parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]);\n            const minuteOffset = parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP]);\n            let timezoneOffset = hourOffset * 60 + minuteOffset;\n            if (match[TIMEZONE_OFFSET_SIGN_GROUP] === '-') {\n                timezoneOffset = -timezoneOffset;\n            }\n\n            if (result.end != null) {\n                result.end.assign('timezoneOffset', timezoneOffset);\n            }\n\n            result.start.assign('timezoneOffset', timezoneOffset);\n            result.text += match[0];\n        });\n\n        return results;\n    }\n}\n","/*\n  \n*/\n\nimport {ParsingContext, Refiner} from \"../../chrono\";\nimport {ParsingResult} from \"../../results\";\n\nexport default class OverlapRemovalRefiner implements Refiner {\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n        if (results.length < 2) {\n            return results;\n        }\n        \n        const filteredResults = [];\n\n        let prevResult = results[0];\n        for (let i=1; i<results.length; i++){\n            const result = results[i];\n            \n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length){\n                    prevResult = result;\n                }\n                \n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n        \n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}","/*\n    Enforce 'forwardDate' option to on the results. When there are missing component,\n    e.g. \"March 12-13 (without year)\" or \"Thursday\", the refiner will try to adjust the result\n    into the future instead of the past.\n*/\n\nimport {ParsingContext, Refiner} from \"../../chrono\";\nimport {ParsingResult} from \"../../results\";\nimport dayjs from \"dayjs\";\n\nexport default class ForwardDateRefiner implements Refiner {\n\n    refine(context: ParsingContext, results: ParsingResult[]): ParsingResult[] {\n\n        if (!context.option.forwardDate) {\n            return results;\n        }\n\n        results.forEach(function(result) {\n            let refMoment = dayjs(context.refDate);\n\n            if (result.start.isOnlyDayMonthComponent() && refMoment.isAfter(result.start.dayjs())) {\n\n                for (let i=0; i < 3 && refMoment.isAfter(result.start.dayjs()); i++) {\n                    result.start.imply('year', result.start.get('year') + 1);\n                    context.debug(() => {\n                        console.log(`Forward yearly adjusted for ${result} (${result.start})`)\n                    });\n\n                    if (result.end && !result.end.isCertain('year')) {\n                        result.end.imply('year', result.end.get('year') + 1);\n                        context.debug(() => {\n                            console.log(`Forward yearly adjusted for ${result} (${result.end})`)\n                        });\n                    }\n                }\n            }\n\n            if (result.start.isOnlyWeekdayComponent() && refMoment.isAfter(result.start.dayjs())) {\n\n                if (refMoment.day() > result.start.get('weekday')) {\n                    refMoment = refMoment.day(result.start.get('weekday') + 7);\n                } else {\n                    refMoment = refMoment.day(<number>result.start.get('weekday'));\n                }\n\n                result.start.imply('day', refMoment.date());\n                result.start.imply('month', refMoment.month() + 1);\n                result.start.imply('year', refMoment.year());\n                context.debug(() => {\n                    console.log(`Forward weekly adjusted for ${result} (${result.start})`)\n                });\n\n                if (result.end && result.end.isOnlyWeekdayComponent()) {\n                    // Adjust date to the coming week\n                    if (refMoment.day() > result.end.get('weekday')) {\n                        refMoment = refMoment.day(result.end.get('weekday') + 7);\n                    } else {\n                        refMoment = refMoment.day(<number>result.end.get('weekday'));\n                    }\n\n                    result.end.imply('day', refMoment.date());\n                    result.end.imply('month', refMoment.month() + 1);\n                    result.end.imply('year', refMoment.year());\n                    context.debug(() => {\n                        console.log(`Forward weekly adjusted for ${result} (${result.end})`)\n                    });\n                }\n            }\n        });\n\n        return results;\n    }\n}\n","import {Filter} from \"../abstractRefiners\";\nimport {ParsingResult} from \"../../results\";\n\nexport default class UnlikelyFormatFilter extends Filter {\n\n    isValid(context, result: ParsingResult): boolean {\n\n        if (result.text.replace(' ','').match(/^\\d*(\\.\\d*)?$/)) {\n            context.debug(() => {\n                console.log(`Removing unlikely result '${result.text}'`)\n            })\n\n            return false;\n        }\n\n        if (!result.start.isValidDate()) {\n            context.debug(() => {\n                console.log(`Removing invalid result: ${result} (${result.start})`)\n            });\n\n            return false;\n        }\n\n        if (result.end && !result.end.isValidDate()) {\n            context.debug(() => {\n                console.log(`Removing invalid result: ${result} (${result.end})`)\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n}","import {Parser, ParsingContext} from \"../../chrono\";\nimport {Component} from \"../../index\";\n\n// ISO 8601\n// http://www.w3.org/TR/NOTE-datetime\n// - YYYY-MM-DD\n// - YYYY-MM-DDThh:mmTZD\n// - YYYY-MM-DDThh:mm:ssTZD\n// - YYYY-MM-DDThh:mm:ss.sTZD\n// - TZD = (Z or +hh:mm or -hh:mm)\nconst PATTERN = new RegExp(\n            '([0-9]{4})\\\\-([0-9]{1,2})\\\\-([0-9]{1,2})'\n            + '(?:T' //..\n                + '([0-9]{1,2}):([0-9]{1,2})' // hh:mm\n                + '(?::([0-9]{1,2})(?:\\\\.(\\\\d{1,4}))?)?' // :ss.s\n                + '(?:Z|([+-]\\\\d{2}):?(\\\\d{2})?)?' // TZD (Z or ±hh:mm or ±hhmm or ±hh)\n            + ')?'  //..\n            + '(?=\\\\W|$)', 'i');\n\nconst YEAR_NUMBER_GROUP = 1;\nconst MONTH_NUMBER_GROUP = 2;\nconst DATE_NUMBER_GROUP  = 3;\nconst HOUR_NUMBER_GROUP  = 4;\nconst MINUTE_NUMBER_GROUP = 5;\nconst SECOND_NUMBER_GROUP = 6;\nconst MILLISECOND_NUMBER_GROUP = 7;\nconst TZD_HOUR_OFFSET_GROUP = 8;\nconst TZD_MINUTE_OFFSET_GROUP = 9;\n\nexport default class ISOFormatParser implements Parser {\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) : {[component: Component]: string | number}{\n        const components: {[component: Component]: string | number} = {}\n        components['year'] = parseInt(match[YEAR_NUMBER_GROUP])\n        components['month'] = parseInt(match[MONTH_NUMBER_GROUP])\n        components['day'] = parseInt(match[DATE_NUMBER_GROUP])\n\n        if (match[HOUR_NUMBER_GROUP] != null) {\n            components['hour'] = parseInt(match[HOUR_NUMBER_GROUP]);\n            components['minute'] = parseInt(match[MINUTE_NUMBER_GROUP]);\n\n            if (match[SECOND_NUMBER_GROUP] != null) {\n                components['second'] = parseInt(match[SECOND_NUMBER_GROUP]);\n            }\n\n            if (match[MILLISECOND_NUMBER_GROUP] != null) {\n                components['millisecond'] = parseInt(match[MILLISECOND_NUMBER_GROUP]);\n            }\n\n            if (match[TZD_HOUR_OFFSET_GROUP] == null) {\n                components['timezoneOffset'] = 0;\n\n            } else {\n                const hourOffset = parseInt(match[TZD_HOUR_OFFSET_GROUP]);\n\n                let minuteOffset = 0;\n                if (match[TZD_MINUTE_OFFSET_GROUP] != null) {\n                    minuteOffset = parseInt(match[TZD_MINUTE_OFFSET_GROUP]);\n                }\n\n                let offset = hourOffset * 60;\n                if (offset < 0) {\n                    offset -= minuteOffset;\n                } else {\n                    offset += minuteOffset;\n                }\n\n                components['timezoneOffset'] = offset;\n            }\n        }\n\n        return components;\n    }\n}\n\n","import {Parser, ParsingContext} from \"../chrono\";\n\nexport function createParserWithWordBoundaryDetection(parser: Parser) : ParserWithWordEndingDetection {\n    return new ParserWithWordEndingDetection(parser)\n}\n\nexport class ParserWithWordEndingDetection implements Parser {\n\n    private original: Parser;\n\n    constructor(parser: Parser) {\n        this.original = parser;\n    }\n\n    pattern(context: ParsingContext): RegExp {\n        const originalPattern = this.original.pattern(context);\n        return new RegExp(`(\\\\W|^)${originalPattern.source}`, originalPattern.flags);\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const header = match[1]\n        match.index = match.index + header.length\n        match[0] = match[0].substring(header.length)\n        for (let i=2; i<match.length; i++) {\n            match[i-1] = match[i]\n        }\n\n        return this.original.extract(context, match)\n    }\n}\n\n","import {Configuration} from \"./chrono\";\n\nimport ExtractTimezoneAbbrRefiner from \"./common/refiners/ExtractTimezoneAbbrRefiner\";\nimport ExtractTimezoneOffsetRefiner from \"./common/refiners/ExtractTimezoneOffsetRefiner\";\nimport OverlapRemovalRefiner from \"./common/refiners/OverlapRemovalRefiner\";\nimport ForwardDateRefiner from \"./common/refiners/ForwardDateRefiner\";\nimport UnlikelyFormatFilter from \"./common/refiners/UnlikelyFormatFilter\";\nimport ISOFormatParser from \"./common/parsers/ISOFormatParser\";\nimport {createParserWithWordBoundaryDetection} from \"./utils/ParserWithWordEndingDetection\";\n\nexport function includeCommonConfiguration(configuration: Configuration): Configuration {\n\n    configuration.parsers.unshift(createParserWithWordBoundaryDetection(new ISOFormatParser()))\n\n    configuration.refiners.unshift(new ExtractTimezoneAbbrRefiner())\n    configuration.refiners.unshift(new ExtractTimezoneOffsetRefiner())\n    configuration.refiners.unshift(new OverlapRemovalRefiner())\n    configuration.refiners.push(new ForwardDateRefiner())\n    configuration.refiners.push(new UnlikelyFormatFilter())\n    return configuration;\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingComponents, ParsingResult} from \"../../../results\";\nimport dayjs from \"dayjs\";\nimport {Meridiem} from \"../../../index\";\n\nexport default class ENCasualDateParser implements Parser {\n\n    pattern(): RegExp {\n        return /(now|today|tonight|last\\s*night|tomorrow|tmr|yesterday)(?=\\W|$)/i;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents | ParsingResult {\n\n        let targetDate = dayjs(context.refDate);\n        const lowerText = match[0].toLowerCase();\n        const component = context.createParsingComponents()\n\n        if(lowerText == 'tonight'){\n            // Normally means this coming midnight\n            component.imply('hour', 22);\n            component.imply('meridiem', Meridiem.PM);\n\n        } else if (/^tomorrow|^tmr/.test(lowerText)) {\n            // Check not \"Tomorrow\" on late night\n            if(targetDate.hour() > 1) {\n                targetDate = targetDate.add(1, 'day');\n            }\n\n        } else if (/^yesterday/.test(lowerText)) {\n\n            targetDate = targetDate.add(-1, 'day');\n\n        } else if(lowerText.match(/last\\s*night/)) {\n\n            component.imply('hour', 0);\n            if (targetDate.hour() > 6) {\n                targetDate = targetDate.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"now\")) {\n            component.assign('hour', targetDate.hour());\n            component.assign('minute', targetDate.minute());\n            component.assign('second', targetDate.second());\n            component.assign('millisecond', targetDate.millisecond());\n        }\n\n        component.assign('day', targetDate.date())\n        component.assign('month', targetDate.month() + 1)\n        component.assign('year', targetDate.year())\n        return component;\n    }\n}","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {Meridiem} from \"../../../index\";\n\nexport default class ENCasualTimeParser implements Parser {\n\n    pattern() { return /(?:this)?\\s*(morning|afternoon|evening|night|noon)(?=\\W|$)/i; }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n        const component = context.createParsingComponents()\n        switch (match[1].toLowerCase()) {\n\n            case 'afternoon':\n                component.imply('meridiem', Meridiem.PM);\n                component.imply('hour', 15);\n                break;\n\n            case 'evening':\n            case 'night':\n                component.imply('meridiem', Meridiem.PM);\n                component.imply('hour', 20);\n                break;\n\n            case 'morning':\n                component.imply('meridiem', Meridiem.AM);\n                component.imply('hour', 6);\n                break;\n\n            case 'noon':\n                component.imply('meridiem', Meridiem.AM);\n                component.imply('hour', 12);\n                break;\n        }\n\n        return component;\n    }\n}\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingComponents} from \"../../../results\";\nimport {WEEKDAY_DICTIONARY} from \"../constants\";\nimport dayjs, {Dayjs} from \"dayjs\";\nimport {matchAnyPattern} from \"../../../utils/pattern\";\n\nconst PATTERN = new RegExp(\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:on\\\\s*?)?' +\n    '(?:(this|last|past|next)\\\\s*)?' +\n    `(${matchAnyPattern(WEEKDAY_DICTIONARY)})` +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(this|last|past|next)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nconst PREFIX_GROUP = 1;\nconst WEEKDAY_GROUP = 2;\nconst POSTFIX_GROUP = 3;\n\nexport default class ENWeekdayParser implements Parser {\n\n    pattern(): RegExp {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n\n        const dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        const offset = WEEKDAY_DICTIONARY[dayOfWeek];\n        if (offset === undefined) {\n            return null;\n        }\n\n        const prefix = match[PREFIX_GROUP];\n        const postfix = match[POSTFIX_GROUP];\n        let modifier = prefix || postfix;\n        modifier = modifier || '';\n        modifier = modifier.toLowerCase();\n\n        const date = this.extractWeekday(context.refDate, offset, modifier);\n        return context.createParsingComponents()\n            .assign('weekday', offset)\n            .imply('day', date.date())\n            .imply('month', date.month() + 1)\n            .imply('year', date.year());\n    }\n\n    private extractWeekday(refDate: Date, offset, modifier?: string) : Dayjs {\n        let date = dayjs(refDate);\n        const refOffset = date.day();\n\n        if(modifier == 'last' || modifier == 'past') {\n            date = date.day(offset - 7);\n        } else if(modifier == 'next') {\n            date = date.day(offset + 7);\n        } else if(modifier == 'this') {\n            date = date.day(offset);\n        } else {\n            if (Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n                date = date.day(offset - 7);\n            } else if (Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n                date = date.day(offset + 7);\n            } else {\n                date = date.day(offset);\n            }\n        }\n\n        return date;\n    }\n}\n","import {NUMBER_PATTERN, parseNumberPattern} from \"../constants\";\nimport {Parser, ParsingContext} from \"../../../chrono\";\nimport {ParsingComponents} from \"../../../results\";\nimport dayjs from \"dayjs\";\n\n\nconst PATTERN = new RegExp(\n    '(this|next|last|past)\\\\s*' +\n    `(${NUMBER_PATTERN})?\\\\s*` +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)(?=\\\\s*)' +\n    '(?=\\\\W|$)', 'i'\n);\n\nconst MODIFIER_WORD_GROUP = 1;\nconst MULTIPLIER_WORD_GROUP = 2;\nconst RELATIVE_WORD_GROUP = 3;\n\nexport default class ENRelativeDateFormatParser implements Parser {\n\n    pattern(): RegExp {return PATTERN; }\n    extract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n        if (match[MODIFIER_WORD_GROUP].toLowerCase().match(/^this/)) {\n            if (match[MULTIPLIER_WORD_GROUP]) {\n                return null;\n            }\n\n            return this.extractThisReference(context, match[RELATIVE_WORD_GROUP]);\n        }\n\n        const modifier = match[MODIFIER_WORD_GROUP].toLowerCase().match(/^next/) ? 1 : -1;\n        const parsedNum = match[MULTIPLIER_WORD_GROUP] ? parseNumberPattern(match[MULTIPLIER_WORD_GROUP]) : 1;\n        const unitWord = match[RELATIVE_WORD_GROUP].toLowerCase()\n\n        if (unitWord.match(/day|week|month|year/i)) {\n            return this.extractDateReference(context, unitWord, parsedNum * modifier);\n        } else {\n            return this.extractTimeReference(context, unitWord, parsedNum * modifier)\n        }\n    }\n\n    extractTimeReference(context: ParsingContext, timeUnitWord: string, num: number) {\n        const components = context.createParsingComponents()\n        let date = dayjs(context.refDate);\n\n        if (timeUnitWord.match(/hour/i)) {\n\n            date = date.add(num, 'hour');\n            components.imply('minute', date.minute());\n            components.imply('second', date.second());\n\n        } else if (timeUnitWord.match(/min/i)) {\n\n            date = date.add(num, 'minute');\n            components.assign('minute', date.minute());\n            components.imply('second', date.second());\n\n        } else if (timeUnitWord.match(/second/i)) {\n\n            date = date.add(num, 'second');\n            components.assign('second', date.second());\n            components.assign('minute', date.minute());\n        }\n\n        components.assign('hour', date.hour());\n        components.assign('year', date.year());\n        components.assign('month', date.month() + 1);\n        components.assign('day', date.date());\n\n        return components;\n    }\n\n    extractDateReference(context: ParsingContext, dateUnitWord: string, num: number) {\n        const components = context.createParsingComponents()\n        let date = dayjs(context.refDate);\n\n        if (dateUnitWord.match(/day/i)) {\n            date = date.add(num, 'd');\n            components.assign('year', date.year());\n            components.assign('month', date.month() + 1);\n            components.assign('day', date.date());\n        } else if (dateUnitWord.match(/week/i)) {\n            date = date.add(num * 7, 'd');\n            // We don't know the exact date for next/last week so we imply them\n            components.imply('day', date.date());\n            components.imply('month', date.month() + 1);\n            components.imply('year', date.year());\n        } else if (dateUnitWord.match(/month/i)) {\n            date = date.add(num, 'month');\n            // We don't know the exact day for next/last month\n            components.imply('day', date.date());\n            components.assign('year', date.year());\n            components.assign('month', date.month() + 1);\n        } else if (dateUnitWord.match(/year/i)) {\n            date = date.add(num, 'year');\n            // We don't know the exact day for month on next/last year\n            components.imply('day', date.date());\n            components.imply('month', date.month() + 1);\n            components.assign('year', date.year());\n        }\n\n        return components;\n    }\n\n    extractThisReference(context: ParsingContext, relativeWord: string) {\n        const components = context.createParsingComponents()\n        let date = dayjs(context.refDate);\n\n        // This week\n        if (relativeWord.match(/week/i)) {\n            date = date.add(-date.get('d'), 'd');\n            components.imply('day', date.date());\n            components.imply('month', date.month() + 1);\n            components.imply('year', date.year());\n        }\n\n        // This month\n        else if (relativeWord.match(/month/i)) {\n            date = date.add(-date.date() + 1, 'd');\n            components.imply('day', date.date());\n            components.assign('year', date.year());\n            components.assign('month', date.month() + 1);\n        }\n\n        // This year\n        else if (relativeWord.match(/year/i)) {\n            date = date.add(-date.date() + 1, 'd');\n            date = date.add(-date.month(), 'month');\n\n            components.imply('day', date.date());\n            components.imply('month', date.month() + 1);\n            components.assign('year', date.year());\n        }\n\n        return components;\n    }\n}\n","import {ParsingComponents, ParsingResult} from \"./results\";\nimport {Component, ParsedResult, ParsingOption} from \"./index\";\nimport {AsyncDebugBlock, DebugHandler} from \"./debugging\";\nimport {createCasualConfiguration} from './locales/en';\n\nexport interface Configuration {\n    parsers: Parser[],\n    refiners: Refiner[]\n}\n\nexport interface Parser {\n    pattern: (context: ParsingContext) => RegExp,\n    extract: (context: ParsingContext, match: RegExpMatchArray) =>\n        (ParsingComponents | ParsingResult | {[c: Component]: string|number} | null)\n}\n\nexport interface Refiner {\n    refine: (context: ParsingContext, results: ParsingResult[]) => ParsingResult[]\n}\n\nexport class Chrono {\n    parsers: Array<Parser>\n    refiners: Array<Refiner>\n\n    constructor(configuration?: Configuration) {\n        configuration = configuration || createCasualConfiguration();\n        this.parsers = [...configuration.parsers];\n        this.refiners = [...configuration.refiners];\n    }\n\n    parseDate(text, refDate, opt): Date {\n        const results = this.parse(text, refDate, opt);\n        return (results.length > 0) ? results[0].start.date() : null;\n    }\n\n    parse(text: string, refDate?: Date, opt?: ParsingOption): ParsedResult[] {\n        const context = new ParsingContext(text,\n            refDate || new Date(),\n            opt || {})\n\n        let results = [];\n        this.parsers.forEach((parser) => {\n            const parsedResults = Chrono.executeParser(context, parser);\n            results = results.concat(parsedResults);\n        });\n\n        results.sort((a, b) => {\n            return a.index - b.index;\n        });\n\n        this.refiners.forEach(function (refiner) {\n            results = refiner.refine(context, results);\n        });\n\n        return results;\n    }\n\n    clone() : Chrono{\n        return new Chrono({\n            parsers: [...this.parsers],\n            refiners: [...this.refiners]\n        })\n    }\n\n    private static executeParser(context: ParsingContext, parser: Parser) {\n        const results = [];\n        const pattern = parser.pattern(context);\n\n        const originalText = context.text;\n        let remainingText = context.text;\n        let match = pattern.exec(remainingText);\n\n        while (match) {\n\n            // Calculate match index on the full text;\n            const index = match.index + originalText.length - remainingText.length\n            match.index = index;\n\n            const result = parser.extract(context, match);\n            if (!result) {\n                // If fail, move on by 1\n                remainingText = originalText.substring(index + 1);\n                match = pattern.exec(remainingText);\n                continue;\n            }\n\n            let parsedResult: ParsingResult = null;\n            if (result instanceof ParsingResult) {\n                parsedResult = result;\n            } else if (result instanceof ParsingComponents) {\n                parsedResult = context.createParsingResult(match.index, match[0])\n                parsedResult.start = result\n            } else {\n                parsedResult = context.createParsingResult(match.index, match[0], result)\n            }\n\n            context.debug(() =>\n                console.log(`${parser.constructor.name} extracted result ${parsedResult}`))\n\n            results.push(parsedResult);\n            remainingText = originalText.substring(index + parsedResult.text.length);\n            match = pattern.exec(remainingText);\n        }\n\n        return results;\n    }\n}\n\nexport class ParsingContext implements DebugHandler {\n    constructor(\n        readonly text: string,\n        readonly refDate: Date,\n        readonly option: ParsingOption\n    ) {}\n\n    createParsingComponents(components?: {[c: Component]: string|number}) : ParsingComponents {\n        return new ParsingComponents(this.refDate, components)\n    }\n\n    createParsingResult(\n        index: number, textOrEndIndex: number | string,\n        startComponents?: {[c: Component]: string|number},\n        endComponents?: {[c: Component]: string|number}\n    ) : ParsingResult {\n\n        const text = (typeof textOrEndIndex === 'string') ? textOrEndIndex :\n            this.text.substring(index, textOrEndIndex)\n\n        const start = startComponents ? this.createParsingComponents(startComponents) : null\n        const end = endComponents ? this.createParsingComponents(endComponents) : null\n\n        return new ParsingResult(this.refDate, index, text, start, end)\n    }\n\n    debug(block: AsyncDebugBlock): void {\n        if (this.option.debug) {\n            if (this.option.debug instanceof Function) {\n                this.option.debug(block)\n            } else {\n                const handler: DebugHandler = <DebugHandler>this.option.debug;\n                handler.debug(block)\n            }\n        }\n    }\n}\n","\n\nimport ENTimeUnitDeadlineFormatParser from \"./parsers/ENTimeUnitDeadlineFormatParser\";\nimport ENMonthNameLittleEndianParser from \"./parsers/ENMonthNameLittleEndianParser\";\nimport ENMonthNameMiddleEndianParser from \"./parsers/ENMonthNameMiddleEndianParser\";\nimport ENMonthNameParser from \"./parsers/ENMonthNameParser\";\nimport ENSlashDateFormatParser from \"./parsers/ENSlashDateFormatParser\";\nimport ENSlashDateFormatStartWithYearParser from \"./parsers/ENSlashDateFormatStartWithYearParser\";\nimport ENSlashMonthFormatParser from \"./parsers/ENSlashMonthFormatParser\";\nimport ENTimeExpressionParser from \"./parsers/ENTimeExpressionParser\";\nimport ENTimeUnitAgoFormatParser from \"./parsers/ENTimeUnitAgoFormatParser\";\nimport ENTimeUnitLaterFormatParser from \"./parsers/ENTimeUnitLaterFormatParser\";\nimport ENMergeDateRangeRefiner from \"./refiners/ENMergeDateRangeRefiner\";\nimport ENMergeDateTimeRefiner from \"./refiners/ENMergeDateTimeRefiner\";\n\nimport {includeCommonConfiguration} from \"../../configurations\";\nimport ENCasualDateParser from \"./parsers/ENCasualDateParser\";\nimport ENCasualTimeParser from \"./parsers/ENCasualTimeParser\";\nimport ENWeekdayParser from \"./parsers/ENWeekdayParser\";\nimport ENRelativeDateFormatParser from \"./parsers/ENRelativeDateFormatParser\";\n\nimport {ParsedResult, ParsingOption} from \"../../index\";\nimport {Chrono, Configuration} from \"../../chrono\";\nimport {createParserWithWordBoundaryDetection as withWordBoundary} from \"../../utils/ParserWithWordEndingDetection\";\n\n// Shortcuts\nexport const casual = new Chrono(createCasualConfiguration(false))\nexport const strict = new Chrono(createConfiguration(true, false))\n\nexport const GB = new Chrono(createConfiguration(false, true))\n\nexport function parse(text: string, ref?: Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\nexport function parseDate(text: string, ref?: Date, option?: ParsingOption) : Date {\n    return casual.parseDate(text, ref, option);\n}\n\nexport function createCasualConfiguration(littleEndian = false) : Configuration {\n    const option = createConfiguration(false, littleEndian);\n    option.parsers.unshift(withWordBoundary(new ENCasualDateParser()));\n    option.parsers.unshift(withWordBoundary(new ENCasualTimeParser()));\n    option.parsers.unshift(withWordBoundary(new ENWeekdayParser()));\n    option.parsers.unshift(withWordBoundary(new ENRelativeDateFormatParser()));\n    return option;\n}\n\nexport function createConfiguration(strictMode= true, littleEndian = false) : Configuration {\n    return includeCommonConfiguration({\n        parsers: [\n            withWordBoundary(new ENTimeUnitDeadlineFormatParser(strictMode)),\n            withWordBoundary(new ENMonthNameLittleEndianParser()),\n            withWordBoundary(new ENMonthNameMiddleEndianParser()),\n            withWordBoundary(new ENMonthNameParser()),\n            new ENSlashDateFormatParser(littleEndian),\n            withWordBoundary(new ENSlashDateFormatStartWithYearParser()),\n            withWordBoundary(new ENSlashMonthFormatParser()),\n            new ENTimeExpressionParser(),\n            withWordBoundary(new ENTimeUnitAgoFormatParser(strictMode)),\n            withWordBoundary(new ENTimeUnitLaterFormatParser(strictMode)),\n        ],\n        refiners: [\n            new ENMergeDateTimeRefiner(),\n            new ENMergeDateRangeRefiner()\n        ]\n    });\n}\n\n","/**\n * to-hankaku.js\n * convert to ascii code strings.\n *\n * @version 1.0.1\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\nexport function toHankaku(text) {\n    return String(text).replace(/\\u2019/g, '\\u0027')\n        .replace(/\\u201D/g, '\\u0022')\n        .replace(/\\u3000/g, '\\u0020')\n        .replace(/\\uFFE5/g, '\\u00A5')\n        .replace(/[\\uFF01\\uFF03-\\uFF06\\uFF08\\uFF09\\uFF0C-\\uFF19\\uFF1C-\\uFF1F\\uFF21-\\uFF3B\\uFF3D\\uFF3F\\uFF41-\\uFF5B\\uFF5D\\uFF5E]/g, alphaNum);\n}\n\nfunction alphaNum (token) {\n    return String.fromCharCode(token.charCodeAt(0) - 65248);\n}","import {Parser, ParsingContext} from \"../../../chrono\";\nimport {toHankaku} from \"../constants\";\nimport {findYearClosestToRef} from \"../../../calculation/yearCalculation\";\n\nimport dayjs from \"dayjs\";\n\n\nconst PATTERN = /(?:(?:([同今本])|((昭和|平成|令和)?([0-9０-９]{1,4}|元)))年\\s*)?([0-9０-９]{1,2})月\\s*([0-9０-９]{1,2})日/i;\nconst SPECIAL_YEAR_GROUP  = 1;\nconst TYPICAL_YEAR_GROUP  = 2;\nconst ERA_GROUP         = 3;\nconst YEAR_NUMBER_GROUP = 4;\nconst MONTH_GROUP       = 5;\nconst DAY_GROUP         = 6;\n\nexport default class JPStandardParser implements Parser {\n\n    pattern() {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const month = parseInt(toHankaku(match[MONTH_GROUP]));\n        const day = parseInt(toHankaku(match[DAY_GROUP]));\n        const components = context.createParsingComponents({\n            'day': day, 'month': month\n        });\n\n        if (match[SPECIAL_YEAR_GROUP] && match[SPECIAL_YEAR_GROUP].match('同|今|本')) {\n\n            const moment = dayjs(context.refDate)\n            components.assign('year', moment.year());\n        }\n\n        if (match[TYPICAL_YEAR_GROUP]) {\n            const yearNumText = match[YEAR_NUMBER_GROUP];\n\n            let year = (yearNumText == '元') ? 1 : parseInt(toHankaku(yearNumText))\n            if (match[ERA_GROUP] == '令和') {\n                year += 2018;\n            } else if (match[ERA_GROUP] == '平成') {\n                year += 1988;\n            } else if (match[ERA_GROUP] == '昭和') {\n                year += 1925;\n            }\n\n            components.assign('year', year);\n\n        } else {\n            const year = findYearClosestToRef(context.refDate, day, month);\n            components.imply('year', year);\n        }\n\n        return components;\n    }\n}\n\n","import AbstractMergeDateRangeRefiner from \"../../../common/refiners/AbstractMergeDateRangeRefiner\";\n\n/**\n * Merging before and after results (see. AbstractMergeDateRangeRefiner)\n * This implementation should provide Japanese connecting phases\n * - 水曜日[ー]日曜日\n * - 水曜日[から]日曜日\n */\nexport default class JPMergeDateRangeRefiner extends AbstractMergeDateRangeRefiner {\n\n    patternBetween(): RegExp {\n        return /^\\s*(から|ー|-)\\s*$/i ;\n    }\n}\n\n","import {Parser, ParsingContext} from \"../../../chrono\";\nimport dayjs from \"dayjs\";\nimport {Meridiem} from \"../../../index\";\n\n\nconst PATTERN = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\nexport default class JPCasualDateParser implements Parser {\n\n    pattern() {\n        return PATTERN;\n    }\n\n    extract(context: ParsingContext, match: RegExpMatchArray) {\n\n        const text = match[0];\n\n        let date = dayjs(context.refDate);\n        const components = context.createParsingComponents()\n\n        if(text == '今夜' || text == '今夕' || text == '今晩'){\n\n            components.imply('hour', 22);\n            components.assign('meridiem', Meridiem.PM);\n\n        } else if (text.match(\"今朝\")) {\n\n            components.imply('hour', 6);\n            components.assign('meridiem', Meridiem.AM);\n\n        } else if(text == '明日'){\n\n            if(date.hour() > 4) { // Check not \"Tomorrow\" on late night\n                date = date.add(1, 'day');\n            }\n\n        } else if(text == '昨日') {\n\n            date = date.add(-1, 'day');\n        }\n\n        components.assign('day', date.date())\n        components.assign('month', date.month() + 1)\n        components.assign('year', date.year())\n        return components;\n    }\n}\n\n","import JPStandardParser from \"./parsers/JPStandardParser\";\nimport JPMergeDateRangeRefiner from \"./refiners/JPMergeDateRangeRefiner\";\nimport JPCasualDateParser from \"./parsers/JPCasualDateParser\";\n\nimport {Chrono, Configuration} from \"../../chrono\";\nimport {ParsedResult, ParsingOption} from \"../../index\";\n\n// Shortcuts\nexport const casual = new Chrono(createCasualConfiguration())\nexport const strict = new Chrono(createConfiguration())\n\nexport function parse(text: string, ref?: Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\nexport function parseDate(text: string, ref?: Date, option?: ParsingOption) : Date {\n    return casual.parseDate(text, ref, option);\n}\n\nexport function createCasualConfiguration() : Configuration {\n    const option = createConfiguration();\n    option.parsers.unshift(new JPCasualDateParser());\n    return option;\n}\n\nexport function createConfiguration() : Configuration {\n    return {\n        parsers: [\n            new JPStandardParser()\n        ],\n        refiners: [\n            new JPMergeDateRangeRefiner()\n        ]\n    }\n}","import {DebugHandler, DebugConsume} from \"./debugging\";\nimport * as en from './locales/en';\n\nexport {Chrono} from './chrono';\nexport const strict = en.strict;\nexport const casual = en.casual;\n\nexport function parse(text: string, ref?: Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\nexport function parseDate(text: string, ref?: Date, option?: ParsingOption) : Date {\n    return casual.parseDate(text, ref, option);\n}\n\nexport interface ParsingOption {\n    forwardDate?: boolean\n    debug?: DebugHandler | DebugConsume\n    timezones?: {string: number}\n}\n\nexport interface ParsedResult {\n    readonly refDate: Date\n    readonly index: number\n    readonly text: string\n\n    readonly start: ParsedComponents\n    readonly end?: ParsedComponents\n\n    readonly date: () => Date\n}\n\nexport interface ParsedComponents {\n    readonly get: (c: Component) => number\n    readonly date: () => Date\n}\n\nexport type Component =\n    'year' | 'month' | 'day' | 'weekday' |\n    'hour' | 'minute' | 'second' | 'millisecond' | 'meridiem' |\n    'timezoneOffset';\n\nexport enum Meridiem {\n    AM = 0,\n    PM = 1\n}\n\n// export * as xx from './locales/xx'\nexport * as en from './locales/en'\nexport * as ja from './locales/ja'\n\n"],"sourceRoot":""}